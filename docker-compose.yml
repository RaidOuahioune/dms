version: '3.8'

services:
  # API Gateway
  nginx-gateway:
    image: nginx:alpine
    container_name: nginx-gateway
    ports:
      - "4000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - documents-service
      - workflow-service
      - kafka
    networks:
      - microservices-net
    restart: unless-stopped

  # Documents Service
  documents-service:
    build:
      context: ./Documents
      dockerfile: Dockerfile
    container_name: documents-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:sqlite:/app/data/documents.db
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=docker
      - JWT_SECRET=YourJwtSecretKeyHereMakeItLongEnoughForHS256Algorithm
    volumes:
      - documents-data:/app/data
    depends_on:
      - kafka
    networks:
      - microservices-net
    restart: unless-stopped

  # Workflow Service
  workflow-service:
    build:
      context: ./Workflow
      dockerfile: Dockerfile
    container_name: workflow-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:sqlite:/app/data/workflow.db
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - workflow-data:/app/data
    depends_on:
      - kafka
      - documents-service
    networks:
      - microservices-net
    restart: unless-stopped

  # Kafka for Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - microservices-net
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-net
    restart: unless-stopped

  # Kafka UI for monitoring and management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - microservices-net
    restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  documents-data:
  workflow-data: